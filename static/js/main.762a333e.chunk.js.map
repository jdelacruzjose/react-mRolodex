{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","Cardlist","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filterMonsters","filter","toLowerCase","includes","PureComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,G,MAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAEL,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCNTC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJZM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCCG,G,MAxCf,kDACE,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,KAGf,EAAKL,aAAe,EAAKA,aAAaM,KAAlB,gBAPR,EADhB,gEAWuB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEhB,SAAUe,SAdjD,mCAiBeE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,UAlB1C,+BAqBY,IAAD,EAC2BF,KAAKV,MAA/BR,EADD,EACCA,SAAUS,EADX,EACWA,YACZY,EAAiBrB,EAASsB,QAAO,SAAC3B,GAAD,OACrCA,EAAQE,KAAK0B,cAAcC,SAASf,EAAYc,kBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,WAlC5B,GAAyBI,kBCOVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.762a333e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img\n      alt=\"monster\"\n      src={`https://robohash.org/${props.monster.id}?set=set2`}\n    />\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport { Card } from '../card-list/card.component';\nimport \"./card-list.css\";\n\nexport const Cardlist = (props) => (\n  <div className=\"card-list\">\n    {props.monsters.map((monster) => (\n      <Card key={monster.id} monster={monster}/>\n    ))}\n  </div>\n);\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { PureComponent } from \"react\";\nimport { Cardlist } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box\";\nimport './App.css'\n\nexport class App extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \" \",\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleChange(e) {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"app\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <Cardlist monsters={filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}